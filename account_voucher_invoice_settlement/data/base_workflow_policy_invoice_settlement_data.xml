<?xml version="1.0" encoding="utf-8" ?>
<!-- Copyright 2019 OpenSynergy Indonesia
     Copyright 2020 PT. Simetri Sinergi Indonesia
     License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl). -->
<openerp>
<data>

<!-- INVOICE SETTLEMENT -->
<record id="base_workflow_invoice_settlement" model="base.workflow_policy">
    <field
                name="model_id"
                ref="account_voucher_invoice_settlement.model_account_invoice_settlement"
            />
</record>
<record
            id="base_workflow_line_invoice_settlement_confirm"
            model="base.workflow_policy_line"
        >
    <field
                name="workflow_id"
                ref="account_voucher_invoice_settlement.base_workflow_invoice_settlement"
            />
    <field
                name="field_id"
                search="[('model_id.model','=','account.invoice_settlement'),('name','=','confirm_ok')]"
            />
    <field name="python_code">obj_voucher_type_allowed_journal =\
    env["account.voucher_type_allowed_journal"]
criteria = [
    ("voucher_type_id", "=", document.type_id.id),
    ("journal_id", "=", document.journal_id.id)
]
allowed_wokflow_policy =\
    obj_voucher_type_allowed_journal.search(criteria)
if allowed_wokflow_policy:
    result = allowed_wokflow_policy.allowed_confirm_group_ids.ids
else:
    result = False
    </field>
</record>
<record
            id="base_workflow_line_invoice_settlement_restart_validation"
            model="base.workflow_policy_line"
        >
    <field
                name="workflow_id"
                ref="account_voucher_invoice_settlement.base_workflow_invoice_settlement"
            />
    <field
                name="field_id"
                search="[('model_id.model','=','account.invoice_settlement'),('name','=','restart_validation_ok')]"
            />
    <field name="python_code">obj_voucher_type_allowed_journal =\
    env["account.voucher_type_allowed_journal"]
criteria = [
    ("voucher_type_id", "=", document.type_id.id),
    ("journal_id", "=", document.journal_id.id)
]
allowed_wokflow_policy =\
    obj_voucher_type_allowed_journal.search(criteria)
if allowed_wokflow_policy:
    result = allowed_wokflow_policy.allowed_restart_validation_group_ids.ids
else:
    result = False
    </field>
</record>
<record
            id="base_workflow_line_invoice_settlement_proforma"
            model="base.workflow_policy_line"
        >
    <field
                name="workflow_id"
                ref="account_voucher_invoice_settlement.base_workflow_invoice_settlement"
            />
    <field
                name="field_id"
                search="[('model_id.model','=','account.invoice_settlement'),('name','=','proforma_ok')]"
            />
    <field name="python_code">obj_voucher_type_allowed_journal =\
    env["account.voucher_type_allowed_journal"]
criteria = [
    ("voucher_type_id", "=", document.type_id.id),
    ("journal_id", "=", document.journal_id.id)
]
allowed_wokflow_policy =\
    obj_voucher_type_allowed_journal.search(criteria)
if allowed_wokflow_policy:
    result = allowed_wokflow_policy.allowed_proforma_group_ids.ids
else:
    result = False
    </field>
</record>
<record
            id="base_workflow_line_invoice_settlement_post"
            model="base.workflow_policy_line"
        >
    <field
                name="workflow_id"
                ref="account_voucher_invoice_settlement.base_workflow_invoice_settlement"
            />
    <field
                name="field_id"
                search="[('model_id.model','=','account.invoice_settlement'),('name','=','post_ok')]"
            />
    <field name="python_code">obj_voucher_type_allowed_journal =\
    env["account.voucher_type_allowed_journal"]
criteria = [
    ("voucher_type_id", "=", document.type_id.id),
    ("journal_id", "=", document.journal_id.id)
]
allowed_wokflow_policy =\
    obj_voucher_type_allowed_journal.search(criteria)
if allowed_wokflow_policy:
    result = allowed_wokflow_policy.allowed_post_group_ids.ids
else:
    result = False
    </field>
</record>
<record
            id="base_workflow_line_invoice_settlement_cancel"
            model="base.workflow_policy_line"
        >
    <field
                name="workflow_id"
                ref="account_voucher_invoice_settlement.base_workflow_invoice_settlement"
            />
    <field
                name="field_id"
                search="[('model_id.model','=','account.invoice_settlement'),('name','=','cancel_ok')]"
            />
    <field name="python_code">obj_voucher_type_allowed_journal =\
    env["account.voucher_type_allowed_journal"]
criteria = [
    ("voucher_type_id", "=", document.type_id.id),
    ("journal_id", "=", document.journal_id.id)
]
allowed_wokflow_policy =\
    obj_voucher_type_allowed_journal.search(criteria)
if allowed_wokflow_policy:
    result = allowed_wokflow_policy.allowed_cancel_group_ids.ids
else:
    result = False
    </field>
</record>
<record
            id="base_workflow_line_invoice_settlement_restart"
            model="base.workflow_policy_line"
        >
    <field
                name="workflow_id"
                ref="account_voucher_invoice_settlement.base_workflow_invoice_settlement"
            />
    <field
                name="field_id"
                search="[('model_id.model','=','account.invoice_settlement'),('name','=','restart_ok')]"
            />
    <field name="python_code">obj_voucher_type_allowed_journal =\
    env["account.voucher_type_allowed_journal"]
criteria = [
    ("voucher_type_id", "=", document.type_id.id),
    ("journal_id", "=", document.journal_id.id)
]
allowed_wokflow_policy =\
    obj_voucher_type_allowed_journal.search(criteria)
if allowed_wokflow_policy:
    result = allowed_wokflow_policy.allowed_restart_group_ids.ids
else:
    result = False
    </field>
</record>

</data>
</openerp>
